handler: src/merchant/index.handler
runtime: nodejs16.x
name: Paya-IVR-merchant-${self:provider.stage}
iamRoleStatementsName: Paya-IVR-merchant-${self:provider.stage}-role
memorySize: 128
timeout: 30
package:
  include: 
    - 'merchant/node_modules/**'
  patterns: 
    - 'merchant/**'
    - 'merchant/node_modules/**'
    - '!node_modules/**'
events:
  - http: 
      method: GET
      path: merchant/{merchantCode}
      integration: lambda
      # authorizer:
      #       name: authorizer
      #       resultTtlInSeconds: 0
      #       identitySource: method.request.header.Authorization
      #       type: token
      response:
        headers:
          Content-Type: "'application/json'"
        template: $input.path("$")
        statusCodes:
          200:
            pattern: '' # Default response method
            template:
              # Your script returns json, so match it here
              application/json: $input.path("$.body")
            headers:
              Content-Type: "'application/json'"
environment:
  NODE_ENV: ${self:provider.stage}
  NODE_API_KEY: ${env:NODE_API_KEY, "#{NODE_API_KEY}"} 
  NODE_API_PASS: ${env:NODE_API_PASS, "#{NODE_API_PASS}"} 
  # JWT setting
  JWT_SECRET: ${env:JWT_SECRET, "#{JWT_SECRET}"} 
  JWT_TOKEN_EXPIRY_IN_MINS: ${env:JWT_TOKEN_EXPIRY_IN_MINS, "#{JWT_TOKEN_EXPIRY_IN_MINS}"}
  # This below env variables for MB ROR API access
  MB_BILLING_PAYA_API_HOST: ${env:MB_BILLING_PAYA_API_HOST, "#{MB_BILLING_PAYA_API_HOST}"}
  MB_BILLING_PAYA_API_NAMESPACE: ${env:MB_BILLING_PAYA_API_NAMESPACE, "#{MB_BILLING_PAYA_API_NAMESPACE}"}
  MB_BILLING_PAYA_API_LIFE_TOKEN: ${env:MB_BILLING_PAYA_API_LIFE_TOKEN, "#{MB_BILLING_PAYA_API_LIFE_TOKEN}"}
  # This below env variables for MB NODE paya adapter API access
  MB_NODE_PAYA_API_HOST: ${env:MB_NODE_PAYA_API_HOST, "#{MB_NODE_PAYA_API_HOST}"}
  MB_NODE_PAYA_API_NAMESPACE: ${env:MB_NODE_PAYA_API_NAMESPACE, "#{MB_NODE_PAYA_API_NAMESPACE}"}
  MB_NODE_PAYA_API_LIFE_TOKEN: ${env:MB_NODE_PAYA_API_LIFE_TOKEN, "#{MB_NODE_PAYA_API_LIFE_TOKEN}"}
